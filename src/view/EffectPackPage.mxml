<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx"
					label="动作/特效打包" width="530" height="576"
					creationComplete="onCreate(event)">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:Label left="20" top="18" styleName="BigFont" text="资源路径"/>
	<s:TextInput id="txSrc" left="98" top="15" width="310"/>
	<s:Button id="pbBrowseSrc" left="433" top="15" label="浏览" styleName="BigFont" click="onClick(event)"/>
	
	<s:Label x="20" y="51" styleName="BigFont" text="输出路径"/>
	<s:TextInput id="txDest" left="98" top="48" width="310"/>
	<s:Button id="pbBrowseDest" x="433" y="49" label="浏览" styleName="BigFont" click="onClick(event)"/>
	<s:CheckBox id="cbUseSrcDir" left="20" top="73" label="使用源路径" styleName="BigFont"/>
	
	<mx:HRule y="104" width="500" horizontalCenter="0"/>
	
	<s:Label left="20" top="115" styleName="BigFont" text="压缩品质"/>
	<s:HSlider id="hsQuality" left="98" top="118" width="310" maximum="101" minimum="1" value="80"/>
	<s:TextInput id="txQuality" left="433" top="111" width="70" text="80" textAlign="center"/>
	
	<s:RadioButton id="rbAction" left="20" top="142" label="动作打包" selected="{type==TYPE_ACTION}" styleName="BigFont" click="onClick(event)" />
	<s:BorderContainer top="172" width="490" height="250" borderVisible="true"
					   dropShadowVisible="true" horizontalCenter="0">
		<s:DataGrid id="dgAction" x="16" y="12" width="450" height="130" requestedRowCount="4" enabled="{type==TYPE_ACTION}">
			<s:columns>
				<mx:ArrayList>
					<s:GridColumn dataField="packOrder" headerText="打包顺序"></s:GridColumn>
					<s:GridColumn dataField="actionName" headerText="动作名称"></s:GridColumn>
					<s:GridColumn dataField="directory" headerText="文件夹"></s:GridColumn>
					<s:GridColumn dataField="direction" headerText="方向"></s:GridColumn>
					<s:GridColumn dataField="interval" headerText="帧间隔(毫秒)"></s:GridColumn>
				</mx:ArrayList>
			</s:columns>
			<mx:ArrayList></mx:ArrayList>
		</s:DataGrid>
		<s:Label x="51" y="152" styleName="BigFont" text="动作名称"/>
		<s:Label x="194" y="152" styleName="BigFont" text="文件夹"/>
		<s:Label x="308" y="152" styleName="BigFont" text="方向"/>
		<s:Label x="372" y="152" styleName="BigFont" text="帧间隔(毫秒)"/>
		<s:TextInput id="txActionName" x="16" y="176" enabled="{type==TYPE_ACTION}"/>
		<s:TextInput id="txActionDirectory" x="157" y="176" enabled="{type==TYPE_ACTION}"/>
		<s:TextInput id="txActionDirection" x="297" y="176" width="60" enabled="{type==TYPE_ACTION}"/>
		<s:TextInput id="txActionInterval" x="368" y="176" width="100" enabled="{type==TYPE_ACTION}"/>
		<s:Button id="pbAddAction" x="124" y="212" label="新增动作" styleName="BigFont" enabled="{type==TYPE_ACTION}"/>
		<s:Button id="pbRemoveAction" x="286" y="212" label="删除动作" styleName="BigFont" enabled="{type==TYPE_ACTION}"/>
	</s:BorderContainer>
	
	<s:RadioButton id="rbEffect" left="20" top="432" label="特效打包" styleName="BigFont" selected="{type==TYPE_EFFECT}" click="onClick(event)"/>
	<s:BorderContainer top="462" width="490" height="45" dropShadowVisible="true"
					   horizontalCenter="0">
		<s:Label x="10" y="13" styleName="BigFont" text="帧间隔(毫秒)"/>
		<s:TextInput id="txEffectInterval" x="108" y="10" enabled="{type==TYPE_EFFECT}"/>
	</s:BorderContainer>
	
	<s:Button id="pbPack" top="521" width="100" height="30" label="打包" horizontalCenter="0"
			  styleName="BigFont"/>
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			private static const TYPE_ACTION:int = 1;
			private static const TYPE_EFFECT:int = 2;
			
			[Bindable]
			private var type:int = TYPE_ACTION;
			
			[Bindable]
			private var isUseSrcPath:Boolean;
			[Bindable]
			private var quality:int = 80;
			
			private var srcDir:File;
			private var destDir:File;
			
			private function onCreate(event:FlexEvent):void
			{
				srcDir = new File();
				srcDir.addEventListener(Event.SELECT, onDirSelected);
				destDir = new File();
				destDir.addEventListener(Event.SELECT, onDirSelected);
			}
			
			private function onDirSelected(e:Event):void
			{
				if(e.currentTarget == srcDir)
				{
					txSrc.text = srcDir.nativePath;
				}
				else if(e.currentTarget == destDir)
				{
					txDest.text = destDir.nativePath;
				}
			}
			
			private function onClick(event:MouseEvent):void
			{
				switch(event.currentTarget)
				{
					case rbAction:
						type = TYPE_ACTION;
						break;
					
					case rbEffect:
						type = TYPE_EFFECT;
						break;
				}
			}
			
		]]>
	</fx:Script>
</s:NavigatorContent>
